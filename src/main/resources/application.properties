### H2 database configuration
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

### H2 memory based
spring.datasource.url=jdbc:h2:mem:products

### H2 disk based
#spring.datasource.url=jdbc:h2:file:/data/products

### H2 console at http://localhost:8080/h2-console
spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.h2.console.settings.trace=false
#spring.h2.console.settings.web-allow-others=false


### https://www.baeldung.com/spring-boot-data-sql-and-schema-sql

### database schema creation
# spring.jpa.hibernate.ddl-auto=create
### none -  spring will NOT use @Entity annotations to create tables
### create - drops existing tables and then creates new tables for classes annotated with @Entity
### update - schema is created based on classes annotated with @Entity, tables and columns are never dropped
### create-drop - like create but drops database after use
### validate - only validates whether the tables and columns exist; otherwise, it throws an exception


### database initialization
### resources/schema.sql - tables
### resources/data.sql - initial data
### resources/import.sql - initial data

# spring.sql.init.mode=embedded
### always ? always initialize the database
### embedded ? always initialize if an embedded database is in use - default value
### never ? never initialize the database

### spring will use schema.sql and data.sql AFTER
### creation of tables using @Entity annotations
spring.jpa.defer-datasource-initialization=true